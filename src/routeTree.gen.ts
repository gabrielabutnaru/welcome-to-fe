/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedImport } from './routes/_protected'
import { Route as AuthIndexImport } from './routes/auth/index'
import { Route as ProtectedHomeIndexImport } from './routes/_protected/home/index'
import { Route as ProtectedRoomsIdImport } from './routes/_protected/rooms/$id'

// Create/Update Routes

const ProtectedRoute = ProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  id: '/auth/',
  path: '/auth/',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedHomeIndexRoute = ProtectedHomeIndexImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => ProtectedRoute,
} as any)

const ProtectedRoomsIdRoute = ProtectedRoomsIdImport.update({
  id: '/rooms/$id',
  path: '/rooms/$id',
  getParentRoute: () => ProtectedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof rootRoute
    }
    '/_protected/rooms/$id': {
      id: '/_protected/rooms/$id'
      path: '/rooms/$id'
      fullPath: '/rooms/$id'
      preLoaderRoute: typeof ProtectedRoomsIdImport
      parentRoute: typeof ProtectedImport
    }
    '/_protected/home/': {
      id: '/_protected/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof ProtectedHomeIndexImport
      parentRoute: typeof ProtectedImport
    }
  }
}

// Create and export the route tree

interface ProtectedRouteChildren {
  ProtectedRoomsIdRoute: typeof ProtectedRoomsIdRoute
  ProtectedHomeIndexRoute: typeof ProtectedHomeIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedRoomsIdRoute: ProtectedRoomsIdRoute,
  ProtectedHomeIndexRoute: ProtectedHomeIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof ProtectedRouteWithChildren
  '/auth': typeof AuthIndexRoute
  '/rooms/$id': typeof ProtectedRoomsIdRoute
  '/home': typeof ProtectedHomeIndexRoute
}

export interface FileRoutesByTo {
  '': typeof ProtectedRouteWithChildren
  '/auth': typeof AuthIndexRoute
  '/rooms/$id': typeof ProtectedRoomsIdRoute
  '/home': typeof ProtectedHomeIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_protected': typeof ProtectedRouteWithChildren
  '/auth/': typeof AuthIndexRoute
  '/_protected/rooms/$id': typeof ProtectedRoomsIdRoute
  '/_protected/home/': typeof ProtectedHomeIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/auth' | '/rooms/$id' | '/home'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/auth' | '/rooms/$id' | '/home'
  id:
    | '__root__'
    | '/_protected'
    | '/auth/'
    | '/_protected/rooms/$id'
    | '/_protected/home/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ProtectedRoute: typeof ProtectedRouteWithChildren
  AuthIndexRoute: typeof AuthIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  ProtectedRoute: ProtectedRouteWithChildren,
  AuthIndexRoute: AuthIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_protected",
        "/auth/"
      ]
    },
    "/_protected": {
      "filePath": "_protected.tsx",
      "children": [
        "/_protected/rooms/$id",
        "/_protected/home/"
      ]
    },
    "/auth/": {
      "filePath": "auth/index.tsx"
    },
    "/_protected/rooms/$id": {
      "filePath": "_protected/rooms/$id.tsx",
      "parent": "/_protected"
    },
    "/_protected/home/": {
      "filePath": "_protected/home/index.tsx",
      "parent": "/_protected"
    }
  }
}
ROUTE_MANIFEST_END */
